AWSTemplateFormatVersion: 2010-09-09

Description: Basic Ec2 Instances with Parameters, Mapping, Condition, Resources, Outputs

Parameters:
  MyAvailabilityZone:
    Description: Select the AZ
    Type: String
    Default: us-west-1a
    AllowedValues:
      - us-west-1a
      - us-west-1b    
      - us-west-1c

  EnvironmentName:
    Description: Select the environment
    Type: String
    Default: demo
    AllowedValues: 
      - demo
      - prod
      - qa
    ConstraintDescription: must be development or production or qa  

Mappings:   
  MyEnvironmentMap:
    demo:
      instanceType: t2.micro
    prod:
      instanceType: t2.small

Conditions:
  CreateEIPForProd: !Equals [!Ref EnvironmentName, prod]
  CreateProdSecurityGroup: !Equals [!Ref EnvironmentName, prod]
  CreateDemoSecurityGroup: !Not [{Condition: CreateProdSecurityGroup}]

Resources:
  NewKeyPair:
    Type: 'AWS::EC2::KeyPair'
    Properties: 
      KeyName: Demo-Keypair

  EC2Instance: 
    Type: 'AWS::EC2::Instance'
    Properties: 
      ImageId: ami-0cd3dfa4e37921605
      InstanceType: !FindInMap
        - MyEnvironmentMap
        - !Ref EnvironmentName
        - instanceType
      KeyName: !Ref NewKeyPair
      SecurityGroups: 
        'Fn::If':
          - CreateDemoSecurityGroup
          - !Ref DemoEnvSecurityGroup
          - !Ref ProdEnvSecurityGroup
       #  - !Ref AWS::NoValue 
      AvailabilityZone: !Ref MyAvailabilityZone   
      UserData: 
        Fn::Base64: |  
          #!/bin/bash
          sudo yum update -y  
      Tags:
      - Key: Name 
        Value: Ec2-demo

  DemoSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateDemoSecurityGroup
    Properties:
      GroupDescription: SSH-Application
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '8080'
          ToPort: '8080'
          CidrIp: 0.0.0.0/0  
        - IpProtocol: tcp
          FromPort: '8081'
          ToPort: '8081'
          CidrIp: 0.0.0.0/0     
      Tags:
      - Key: Name
        Value: Demo-sg   

  ProdSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: CreateProdSecurityGroup
    Properties:
      GroupDescription: SSH-Application
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '22'
          ToPort: '22'
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: '80'
          ToPort: '80'
          CidrIp: 0.0.0.0/0  
        - IpProtocol: tcp
          FromPort: '443'
          ToPort: '443'
          CidrIp: 0.0.0.0/0     
      Tags:
      - Key: Name
        Value: Prod-sg  

  MyElasticIP:
    Type: AWS::EC2::EIP
    Condition: CreateEIPForProd
    Properties:
      InstanceId: !Ref EC2Instance 
      Tags:
      - Key: Name
        Value: Prod-Eip

Outputs:
  MyInstanceId:
    Description: My instance id
    Value: !Ref EC2Instance
  MyDNSName:
    Description: My Public DNS Name
    Value: !GetAtt EC2Instance.PublicDnsName
  MyInstanceAvailabilityZone:
    Description: Instance Availability Zone
    Value: !GetAtt EC2Instance.AvailabilityZone    
    Export:
      Name: !Sub "${AWS::StackName}-InstanceAz"
  SecurityGroup:
    Description: Security-group
    Value: !Ref DemoSecurityGroup
    Condition: CreateDemoSecurityGroup
    Export:
      Name: !Join [":", [!Ref 'AWS::StackName', DemoSecurityGroup]]

  